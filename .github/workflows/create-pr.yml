name: Create Release Branch and PR

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        type: choice
        description: Version bump type
        options:
          - MAJOR
          - MINOR
          - PATCH
      date:
        type: string
        description: リリース日
        default: $(date +'%Y-%m-%d')

jobs:
  create_pr:
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH_NAME: release/${{ github.event.inputs.date }}
      JSON_FILE_PATH: package.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Generate GitHub Apps token
        id: generate
        env:
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          .github/workflows/actions/github-app.sh
      - name: Set up Git user
        run: |
          git config --global user.email "tset@example.com"
          git config --global user.name "example"
      - name: Create release branch
        run: |
          git checkout -b ${{ env.RELEASE_BRANCH_NAME }}
      - name: Update version
        run: |
          version_bump_type=${{ github.event.inputs.version_bump_type }}
          current_version=$(jq -r .version ${{ env.JSON_FILE_PATH }})
          IFS='.' read -r -a version_parts <<< "$current_version"
          case $version_bump_type in
            MAJOR)
              version_parts[0]=$((version_parts[0] + 1))
              version_parts[1]=0
              version_parts[2]=0
              ;;
            MINOR)
              version_parts[1]=$((version_parts[1] + 1))
              version_parts[2]=0
              ;;
            PATCH)
              version_parts[2]=$((version_parts[2] + 1))
              ;;
          esac
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          jq ".version = \"$new_version\"" ${{ env.JSON_FILE_PATH }} > ${{ env.JSON_FILE_PATH }}.tmp
          mv ${{ env.JSON_FILE_PATH }}.tmp ${{ env.JSON_FILE_PATH }}
          git add ${{ env.JSON_FILE_PATH }}
          git commit -m "chore: bump version to $new_version"
          git push origin ${{ env.RELEASE_BRANCH_NAME }}
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y
      - name: Authenticate with GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ steps.generate.outputs.token }}"
          unset GH_TOKEN
      - name: Create PR for release
        run: |
          gh pr create --base main --head ${{ env.RELEASE_BRANCH_NAME }} --title "Release ${{ env.RELEASE_BRANCH_NAME }}" --label "release"
